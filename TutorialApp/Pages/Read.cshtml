@page "{id:int?}"
@model ReadModel
@using Microsoft.AspNetCore.Mvc.RazorPages;
@using TutorialApp.Entity;
@using TutorialApp.Paging;
@using Models;
@using Paging;

@{
    ViewData["Title"] = "Tutorials";
}

<style>
    .pagingDiv {
        background: #f2f2f2;
    }

        .pagingDiv > a {
            display: inline-block;
            padding: 0px 9px;
            margin-right: 4px;
            border-radius: 3px;
            border: solid 1px #c0c0c0;
            background: #e9e9e9;
            box-shadow: inset 0px 1px 0px rgba(255,255,255, .8), 0px 1px 3px rgba(0,0,0, .1);
            font-size: .875em;
            font-weight: bold;
            text-decoration: none;
            color: #717171;
            text-shadow: 0px 1px 0px rgba(255,255,255, 1);
        }

            .pagingDiv > a:hover {
                background: #fefefe;
                background: -webkit-gradient(linear, 0% 0%, 0% 100%, from(#FEFEFE), to(#f0f0f0));
                background: -moz-linear-gradient(0% 0% 270deg,#FEFEFE, #f0f0f0);
            }

            .pagingDiv > a.active {
                border: none;
                background: #616161;
                box-shadow: inset 0px 0px 8px rgba(0,0,0, .5), 0px 1px 0px rgba(255,255,255, .8);
                color: #f0f0f0;
                text-shadow: 0px 0px 3px rgba(0,0,0, .5);
            }
</style>

<h1 class="bg-info text-white">Tutorials</h1>
<a asp-page="Create" class="btn btn-secondary">Create a Tutorial</a>
<a asp-page="Search" class="btn btn-secondary">Search a Tutorial</a>

<table class="table table-sm table-bordered">
    <tr>
        <th>Id</th>
        <th>Title</th>
        <th>Description</th>
        <th>Is Published</th>
        <th></th>
        <th></th>
    </tr>
    @foreach (Tutorial m in Model.tutorialList.tutorial)
    {
        <tr>
            <td>@m.Id</td>
            <td>@m.Title</td>
            <td>@m.Description</td>
            <td>@m.IsPublished</td>
            <td>
                <a class="btn btn-sm btn-primary" asp-page="Update" asp-route-id="@m.Id">
                    Update
                </a>
            </td>
            <td>
                <form asp-page-handler="delete" asp-route-id="@m.Id" method="post">
                    <button type="submit" class="btn btn-sm btn-danger">
                        Delete
                    </button>
                </form>
            </td>
        </tr>
    }
</table>
<div class="pagingDiv" page-model="Model.tutorialList.pagingInfo" page-name="Read" page-classes-enabled="true" page-class="paging" page-class-selected="active"></div>

@functions{
    public class ReadModel : PageModel
    {
        private readonly IRepository<Tutorial> repository;
        public ReadModel(IRepository<Tutorial> repository)
        {
            this.repository = repository;
        }

        public TutorialList tutorialList { get; set; }

        public async Task OnGet(int id)
        {
            tutorialList = new TutorialList();

            int pageSize = 10;
            PagingInfo pagingInfo = new PagingInfo();
            pagingInfo.CurrentPage = id == 0 ? 1 : id;
            pagingInfo.ItemsPerPage = pageSize;

            var skip = pageSize * (Convert.ToInt32(id) - 1);
            var resultTuple = await repository.ReadAllFilterAsync(skip, pageSize);

            pagingInfo.TotalItems = resultTuple.Item2;
            tutorialList.tutorial = resultTuple.Item1;
            tutorialList.pagingInfo = pagingInfo;
        }

        public async Task<IActionResult> OnPostDeleteAsync(int id)
        {
            await repository.DeleteAsync(id);
            return RedirectToPage("Read", new { id = 1 });
        }
    }
}